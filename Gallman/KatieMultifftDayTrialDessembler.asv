function [trial, day] = KatieMultifftDayTrialDessembler(in, channel,  ReFs, light)
%% usage
%[trial, day] = KatieDayTrialDessembler(kg(#), channel, triallength, ReFs)

%light is a label for whether the subjective day starts with light or with dark
    %starts with dark = 3
    %starts with light = 4

clear trial
clear day

% in = kg(58);
% channel = 1;
% ReFs = 10;

%% prep

% define length of trial 
if in.info.ld > 15 
    triallength = in.info.ld * 2;
else
    triallength = in.info.ld * 4;
end

%triallength

ld = in.info.ld; % Whatever - ld is shorter than in.info.ld

%% Take spline estimate of raw data

%entire data set
%[xx, obwyy, ~, ~, lighttimes] = k_detrendspliner(in,channel, ReFs);

[hixx, loxx, HiAmp, HiTim, LoAmp, LoTim, Hiyy, Loyy, Hilighttimes, Lolighttimes] =  k_multifftsubspliner(in, ReFs, light);


%Make a time base that starts and ends on lighttimes 
    %necessary to define length of raw data

   
    Hitimcont = HiTim(HiTim >= Hilighttimes(1) & HiTim <= Hilighttimes(end));
    Lotimcont = LoTim(LoTim >= Lolighttimes(1) & LoTim <= Lolighttimes(end));
    

%% Define trial period

    % How many trials available?
    HilengthofsampleHOURS = Hilighttimes(end) - Hilighttimes(1); 
    LolengthofsampleHOURS = Lolighttimes(end) - Lolighttimes(1); 


    % How many integer trials in dataset
    Hinumotrials = floor(HilengthofsampleHOURS / triallength); % of trials
    Lonumotrials = floor(LolengthofsampleHOURS / triallength); % of trials

%% Divide data into trials


    %high frequency fish
    for jj = 1:Hinumotrials
        %raw data
                % indices for our sample window of perd hours
                Hitimidx = find(Hitimcont >= Hilighttimes(1) + ((jj-1)*triallength) & ...
                Hitimcont < Hilighttimes(1) + (jj*triallength));
             
                
                 % Data   
                 hout(jj).HifftAmp = HiAmp(Hitimidx);
                 
                 
                 % Time and treatment 
                 hout(jj).Hitimcont = Hitimcont(Hitimidx) - Hitimcont(Hitimidx(1)); %+1
                 hout(jj).Hientiretimcont = Hitimcont(Hitimidx);
                 
                 hout(jj).ld = in.info.ld;  

        %spline data
                % Get the index for the start of the current period (xx is time)
                HiStimidx = find(hixx > hixx(1) + ((jj-1) * triallength), 1);
                % Get the rest of the indices for the trial  
                HiStimidx = HiStimidx:HiStimidx + (triallength*ReFs)-1;
                
                if length(Hiyy) >= HiStimidx(end)
                 % Data   
                 hout(jj).HiSsumfftAmp = Hiyy(HiStimidx);
                 
                 % Time  
                 hout(jj).HiStimcont = hixx(HiStimidx) - hixx(HiStimidx(1)); % Time starting at zero  
                 hout(jj).HiSentiretimcont = hixx(HiStimidx);
                end
    
    
    end   

    %low frequency fish
    clear jj;
    for jj = 1:Lonumotrials
        
        %raw data
                % indices for our sample window of perd hours
                Lotimidx = find(Lotimcont >= Lolighttimes(1) + ((jj-1)*triallength) & ...
                Lotimcont < Lolighttimes(1) + (jj*triallength));
             
                
                 % Data   
                 lout(jj).LofftAmp = LoAmp(Lotimidx);
                 
                 
                 % Time and treatment 
                 lout(jj).Lotimcont = Lotimcont(Lotimidx) - lotimcont(Lotimidx(1)); %+1
                 lout(jj).Loentiretimcont = Lotimcont(Lotimidx);
                 
                 lout(jj).ld = in.info.ld;  

      
        %spline data
                % Get the index for the start of the current period (xx is time)
                LoStimidx = find(loxx > loxx(1) + ((jj-1) * triallength), 1);
                % Get the rest of the indices for the trial  
                LoStimidx = LoStimidx:LoStimidx + (triallength*ReFs)-1;
                
                if length(Loyy) >= HiStimidx(end)
                 % Data   
                 hout(jj).HiSsumfftAmp = Hiyy(HiStimidx);
                 
                 % Time  
                 hout(jj).HiStimcont = hixx(HiStimidx) - hixx(HiStimidx(1)); % Time starting at zero  
                 hout(jj).HiSentiretimcont = hixx(HiStimidx);
                end
    
    end   


%spline data

for jj = 1:numotrials
    
    
             
            % Get the index for the start of the current period (xx is time)
            Stimidx = find(xx > xx(1) + ((jj-1) * triallength), 1);
            % Get the rest of the indices for the trial  
            Stimidx = Stimidx:Stimidx + (triallength*ReFs)-1;
            
            if length(sumfftyy) >= Stimidx(end)
             % Data   
             %out(jj).SobwAmp = fftyy(Stimidx);
%              out(jj).SzAmp = zyy(Stimidx);
             out(jj).SsumfftAmp = sumfftyy(Stimidx);
             
             % Time  
             out(jj).Stimcont = xx(Stimidx) - xx(Stimidx(1)); % Time starting at zero  
             out(jj).Sentiretimcont = xx(Stimidx);
            end
    
    
end
%above copied from KatieTrialTrendDessembler

%% divide trials into days


    for jj = length(out):-1:1 % For each trial
        
        ld = out(jj).ld;

        % Divide by daylength to get the number of days in the trial
        howmanydaysintrial = floor(triallength / (ld*2));
        % This is the number of sample in a day
        howmanysamplesinaday = ld * 2 * ReFs;

        for k = 1:howmanydaysintrial % Each day in a trial


            % Get the index of the start time of the trial
            dayidx = find(out(jj).Stimcont > (k-1) * (ld*2), 1) -1; % k-1 so that we start at zero

            % Get the datums
            %trial(jj).day(k).SobwAmp = out(jj).SobwAmp(dayidx:dayidx+howmanysamplesinaday-1);
%             trial(jj).day(k).SzAmp = out(jj).SzAmp(dayidx:dayidx+howmanysamplesinaday-1);
            trial(jj).day(k).SsumfftAmp = out(jj).SsumfftAmp(dayidx:dayidx+howmanysamplesinaday-1);
%             
               trial(jj).ld = in.info.ld; 

           

        end
            % Make a time sequence for the datums (easier than extracting from
            % xx...)
            trial(jj).tim = 1/ReFs:1/ReFs:howmanysamplesinaday/ReFs;

    end
    
%% Divide sample into days to compare against trial day means

howmanydaysinsample = floor(lengthofsampleHOURS / (ld*2));

tim = 1/ReFs:1/ReFs:howmanysamplesinaday/ReFs;
%spline data

for k = 1:howmanydaysinsample
    

    %         % Get the index of the start time of the day
                dayidx = find(xx >= xx(1) + (k-1) * (ld*2) & xx < xx(1) + k*(ld*2)); % k-1 so that we start at zero

                if length(dayidx) >= howmanysamplesinaday
%                 day(k).SobwAmp = obwyy(dayidx);
%                 day(k).SzAmp = zyy(dayidx);
                day(k).Ssumfftyy = sumfftyy(dayidx);
                day(k).tim = tim;
                end
 end
    
    
%  %% plot to check
% 
%  %trials across tims
%  figure(26); clf; title('trials across time');  hold on;
%  
%     for jj = 1:length(out)
%         
%         plot(out(jj).entiretimcont, out(jj).obwAmp, '.', 'MarkerSize', 3);
%         plot(out(jj).Sentiretimcont, out(jj).SobwAmp, '-', 'LineWidth', 3);
%         
%     end
%     
%     for j = 1:length(lighttimes)
%         
%         plot([lighttimes(j), lighttimes(j)], ylim, 'k-', 'LineWidth', 0.5);
%     end
%     
%  
%  clear mday;
%  
%  %all days
%  %average day by trial
%  figure(27); clf; hold on; title('Day average by trial');
%     for jj=1:length(trial) 
% 
%         %create temporary vector to calculate mean by trial
%         mday(jj,:) = zeros(1, length(trial(jj).tim));
% 
% 
%         for k=1:length(trial(jj).day)
% 
%                 %fill temporary vector with data from each day 
%                 mday(jj,:) = mday(jj,:) + trial(jj).day(k).SobwAmp;
%                 subplot(211); hold on; title('Days');
%                 plot(trial(jj).tim, trial(jj).day(k).SobwAmp);
%                 plot([ld ld], ylim, 'k-', 'LineWidth', 1);
% 
%         end
% 
%          % To get average across days, divide by number of days
%             mday(jj,:) = mday(jj,:) / length(trial(jj).day);
%             subplot(212); hold on; title('Day average by trial');
%             plot(trial(jj).tim, mday(jj,:), '-', 'Linewidth', 1);
%             plot([ld ld], ylim, 'k-', 'LineWidth', 1);
% 
%     end
%     
%     % Mean of means
%  
%     subplot(212); hold on;
%      meanofmeans = mean(mday); % Takes the mean of the means for a day from each trial 
%     plot(trial(jj).tim, meanofmeans, 'k-', 'LineWidth', 3);
%     
% 
%    
%     
% figure(28); clf; hold on; 
% 
% clear meanday;
% 
%  for k = 1:length(day)
%         plot(day(k).tim, day(k).SobwAmp);
%         meanday(k,:) = day(k).SobwAmp;
%  end
%     
%         mmday= mean(meanday);
%         plot(day(1).tim, mmday, 'k-', 'LineWidth', 3);
%         plot([ld ld], ylim, 'k-', 'LineWidth', 1);
%         
% figure(29); clf; hold on;
%     plot(day(1).tim, mmday);
%     plot(trial(jj).tim, meanofmeans);
%     plot([ld ld], ylim, 'k-', 'LineWidth', 1);
%     legend('day mean', 'trial mean');
%      legend('boxoff')
% % 
% % 
